byte_2C575 = 0x3F
byte_2C576 = 0x7C
byte_2C577 = 0x71
byte_2C578 = 0x7E
byte_2C579 = 0x77
byte_2C57A = 0x3F
byte_2C57B = 0x43
byte_2C57C = 0x64
byte_2C57D = 0x62
byte_2C57E = 0x79
byte_2C57F = 0x7E
byte_2C580 = 0x77
byte_2C581 = 0x2B
byte_2C582 = 0x10
byte_2C583 = 0xD6
byte_2C584 = 0xF7
byte_2C585 = 0xF0
byte_2C586 = 0xEB
byte_2C587 = 0xEC
byte_2C588 = 0xE5
byte_2C589 = 0xC4
byte_2C58A = 0xE6
byte_2C58B = 0xCC
byte_2C58C = 0xE3
byte_2C58D = 0xF6
byte_2C58E = 0xEB
byte_2C58F = 0xF4
byte_2C590 = 0xE7
byte_2C591 = 0x82
byte_2C584 = (byte_2C584 & 0x7D) + (~byte_2C584 & 0x82);
print(chr(byte_2C584), end='')
byte_2C585 = (~byte_2C585 & 0x82) + (byte_2C585 & 0x7D);
print(chr(byte_2C585), end='')
byte_2C587 = (~byte_2C587 & 0x82) + (byte_2C587 & 0x7D);
print(chr(byte_2C587), end='')
byte_2C583 = ((~byte_2C583 & 0xE) + (byte_2C583 & 0xF1)) ^ 0x8C;
print(chr(byte_2C583), end='')
byte_2C586 = ((~byte_2C586 & 0xD) + (byte_2C586 & 0xF2)) ^ 0x8F;
print(chr(byte_2C586), end='')
byte_2C588 = ((~byte_2C588 & 0xC7) + (byte_2C588 & 0x38)) ^ 0x45;
print(chr(byte_2C588), end='')
byte_2C589 = ((~byte_2C589 & 0xD0) + (byte_2C589 & 0x2F)) ^ 0x52;
print(chr(byte_2C589), end='')
byte_2C58A = ((~byte_2C58A & 0x3F) + (byte_2C58A & 0xC0)) ^ 0xBD;
print(chr(byte_2C58A), end='')
byte_2C58B = ((byte_2C58B & 0x1B) + (~byte_2C58B & 0xE4)) ^ 0x66;
print(chr(byte_2C58B), end='')
byte_2C58C = (byte_2C58C & 0x7D) + (~byte_2C58C & 0x82);
print(chr(byte_2C58C), end='')
byte_2C58D = ((byte_2C58D & 0xE2) + (~byte_2C58D & 0x1D)) ^ 0x9F;
print(chr(byte_2C58D), end='')
byte_2C58E = (byte_2C58E & 0x7D) + (~byte_2C58E & 0x82);
print(chr(byte_2C58E), end='')
byte_2C58F = ((byte_2C58F & 0x57) + (~byte_2C58F & 0xA8)) ^ 0x2A;
print(chr(byte_2C58F), end='')
byte_2C590 = (byte_2C590 & 0x7D) + (~byte_2C590 & 0x82);
print(chr(byte_2C590), end='')
byte_2C591 = (~byte_2C591 & 0x82) + (byte_2C591 & 0x7D);
print(chr(byte_2C591), end='')
v0 = 0
byte_2C5A0 = [0x23, 2, 5, 0x1E, 0x19, 0x10, 0x31, 0x33, 0x57, 1
    , 0x52, 0x13, 0x57, 0x5F, 0x1B, 0x52, 4, 0x5B, 0x57
    , 0x14, 0x18, 0x1A, 7, 0x1E, 0x1B, 0x12, 0x13, 0x57
    , 0x52, 4, 0x5B, 0x57, 0x52, 4, 0x5B, 0x57, 0x1A, 0x1E
    , 0x19, 0x1E, 0x5E, 0x77]
while v0 != 42:
    byte_2C5A0[v0] = (byte_2C5A0[v0] & 0x88) + (~byte_2C5A0[v0] & 0x77);
    v0 += 1
print()
for i in byte_2C5A0:
    print(chr(i), end='')

# byte_2C5CB = (byte_2C5CB & 0x86) + (~byte_2C5CB & 0x79);
# byte_2C5CC = (~byte_2C5CC & 0x79) + (byte_2C5CC & 0x86);
# byte_2C5CE = (byte_2C5CE & 0x8B) + (~byte_2C5CE & 0x74);
# byte_2C5D0 = (~byte_2C5D0 & 0x74) + (byte_2C5D0 & 0x8B);
# byte_2C5CA = ((byte_2C5CA & 0x84) + (~byte_2C5CA & 0x7B)) ^ 2;
# byte_2C5CD = ((~byte_2C5CD & 0xF3) + (byte_2C5CD & 0xC)) ^ 0x87;
# byte_2C5CF = ((~byte_2C5CF & 0xA5) + (byte_2C5CF & 0x5A)) ^ 0xD1;
# byte_2C5D1 = ((~byte_2C5D1 & 0x82) + (byte_2C5D1 & 0x7D)) ^ 0xF6;
# byte_2C5D2 = ((~byte_2C5D2 & 0x2B) + (byte_2C5D2 & 0xD4)) ^ 0x9C;
# byte_2C5D3 = ((~byte_2C5D3 & 0x60) + (byte_2C5D3 & 0x9F)) ^ 0xD7;
# byte_2C5D6 = (byte_2C5D6 & 0x48) + (~byte_2C5D6 & 0xB7);
# byte_2C5D8 = (byte_2C5D8 & 0x48) + (~byte_2C5D8 & 0xB7);
# byte_2C5D9 = (~byte_2C5D9 & 0xB7) + (byte_2C5D9 & 0x48);
# byte_2C5D4 = ((~byte_2C5D4 & 0xF9) + (byte_2C5D4 & 6)) ^ 0x4E;
# byte_2C5D5 = ((~byte_2C5D5 & 0xC6) + (byte_2C5D5 & 0x39)) ^ 0x71;
# byte_2C5D7 = ((~byte_2C5D7 & 0x60) + (byte_2C5D7 & 0x9F)) ^ 0xD7;
# v1 = 0;
# do
# {
#     byte_2C5E0[v1] = (byte_2C5E0[v1] & 0xCC) + (~byte_2C5E0[v1] & 0x33);
# ++v1;
# }
# while (v1 != 52);
# byte_2C614 = (byte_2C614 & 0x43) + (~byte_2C614 & 0xBC);
# byte_2C615 = (~byte_2C615 & 0xBC) + (byte_2C615 & 0x43);
# v2 = 0;
# do
# {
#     byte_2C620[v2] = (byte_2C620[v2] & 0x34) + (~byte_2C620[v2] & 0xCB);
# ++v2;
# }
# while (v2 != 96);
# byte_2C681 = (byte_2C681 & 0x55) + (~byte_2C681 & 0xAA);
# byte_2C680 = ((byte_2C680 & 0x93) + (~byte_2C680 & 0x6C)) ^ 0xC6;
# v3 = 0;
# do
# {
#     byte_2C690[v3] = (byte_2C690[v3] & 0xCE) + (~byte_2C690[v3] & 0x31);
# ++v3;
# }
# while (v3 != 58);
# byte_2C6CA = (byte_2C6CA & 0xEB) + (~byte_2C6CA & 0x14);
# byte_2C6CB = ((~byte_2C6CB & 0xD3) + (byte_2C6CB & 0x2C)) ^ 0xC7;
# v4 = 0;
# do
# {
#     byte_2C6D0[v4] = (byte_2C6D0[v4] & 2) + (~byte_2C6D0[v4] & 0xFD);
# ++v4;
# }
# while (v4 != 80);
# byte_2C724 = (byte_2C724 & 0x5D) + (~byte_2C724 & 0xA2);
# byte_2C726 = (~byte_2C726 & 0xA2) + (byte_2C726 & 0x5D);
# byte_2C727 = (~byte_2C727 & 0x39) + (byte_2C727 & 0xC6);
# byte_2C720 = ((byte_2C720 & 0xC7) + (~byte_2C720 & 0x38)) ^ 0x9A;
# byte_2C721 = ((byte_2C721 & 0x17) + (~byte_2C721 & 0xE8)) ^ 0x4A;
# byte_2C722 = ((byte_2C722 & 0xEE) + (~byte_2C722 & 0x11)) ^ 0xB3;
# byte_2C723 = ((byte_2C723 & 0x5F) + (~byte_2C723 & 0xA0)) ^ 2;
# byte_2C728 = (~byte_2C728 & 0x39) + (byte_2C728 & 0xC6);
# byte_2C725 = ((byte_2C725 & 0x7B) + (~byte_2C725 & 0x84)) ^ 0x26;
# byte_2C729 = ((~byte_2C729 & 0xCD) + (byte_2C729 & 0x32)) ^ 0xF4;
# byte_2C72A = (byte_2C72A & 0xC6) + (~byte_2C72A & 0x39);
# byte_2C72B = (~byte_2C72B & 0x39) + (byte_2C72B & 0xC6);
# byte_2C72C = (~byte_2C72C & 0x39) + (byte_2C72C & 0xC6);
# byte_2C72D = ((~byte_2C72D & 0xCD) + (byte_2C72D & 0x32)) ^ 0xF4;
# byte_2C72E = ((~byte_2C72E & 0xBD) + (byte_2C72E & 0x42)) ^ 0x84;
# byte_2C72F = (byte_2C72F & 0xC6) + (~byte_2C72F & 0x39);
# byte_2C731 = (byte_2C731 & 0x70) + (~byte_2C731 & 0x8F);
# byte_2C732 = (~byte_2C732 & 0x8F) + (byte_2C732 & 0x70);
# byte_2C733 = (~byte_2C733 & 0x8F) + (byte_2C733 & 0x70);
# byte_2C736 = (byte_2C736 & 0x70) + (~byte_2C736 & 0x8F);
# byte_2C737 = (byte_2C737 & 0x70) + (~byte_2C737 & 0x8F);
# byte_2C738 = (byte_2C738 & 0x70) + (~byte_2C738 & 0x8F);
# byte_2C730 = ((byte_2C730 & 0x10) + (~byte_2C730 & 0xEF)) ^ 0x60;
# byte_2C734 = ((byte_2C734 & 0x31) + (~byte_2C734 & 0xCE)) ^ 0x41;
# byte_2C735 = ((byte_2C735 & 0x60) + (~byte_2C735 & 0x9F)) ^ 0x10;
# byte_2C739 = ((byte_2C739 & 0x95) + (~byte_2C739 & 0x6A)) ^ 0xE5;
# byte_2C73A = ((byte_2C73A & 0x78) + (~byte_2C73A & 0x87)) ^ 8;
# byte_2C73B = (byte_2C73B & 0x70) + (~byte_2C73B & 0x8F);
# byte_2C73C ^= 0x8F
# u;
# byte_2C73D = (byte_2C73D & 0x70) + (~byte_2C73D & 0x8F);
# byte_2C73E = ((byte_2C73E & 0xF1) + (~byte_2C73E & 0xE)) ^ 0x81;
# byte_2C73F = ((byte_2C73F & 0x56) + (~byte_2C73F & 0xA9)) ^ 0x26;
# byte_2C740 = (~byte_2C740 & 0x8F) + (byte_2C740 & 0x70);
# byte_2C754 = (byte_2C754 & 0x88) + (~byte_2C754 & 0x77);
# byte_2C758 = (byte_2C758 & 0x88) + (~byte_2C758 & 0x77);
# byte_2C750 = ((~byte_2C750 & 0x24) + (byte_2C750 & 0xDB)) ^ 0x53;
# byte_2C751 = ((~byte_2C751 & 0x3E) + (byte_2C751 & 0xC1)) ^ 0x49;
# byte_2C752 = ((byte_2C752 & 6) + (~byte_2C752 & 0xF9)) ^ 0x8E;
# byte_2C753 = ((byte_2C753 & 0x19) + (~byte_2C753 & 0xE6)) ^ 0x91;
# byte_2C755 = ((byte_2C755 & 0xEB) + (~byte_2C755 & 0x14)) ^ 0x63;
# byte_2C756 = ((byte_2C756 & 0x41) + (~byte_2C756 & 0xBE)) ^ 0xC9;
# byte_2C757 = ((byte_2C757 & 0x5B) + (~byte_2C757 & 0xA4)) ^ 0xD3;
# byte_2C759 = (byte_2C759 & 0x88) + (~byte_2C759 & 0x77);
# byte_2C75A = ((byte_2C75A & 0x54) + (~byte_2C75A & 0xAB)) ^ 0xDC;
# byte_2C75B = (byte_2C75B & 0x88) + (~byte_2C75B & 0x77);
# byte_2C75C = (byte_2C75C & 0x88) + (~byte_2C75C & 0x77);
# byte_2C75D = (byte_2C75D & 0x88) + (~byte_2C75D & 0x77);
# byte_2C75E = ((byte_2C75E & 0x10) + (~byte_2C75E & 0xEF)) ^ 0x98;
# byte_2C75F = (byte_2C75F & 0x88) + (~byte_2C75F & 0x77);
# byte_2C760 = (byte_2C760 & 0x88) + (~byte_2C760 & 0x77);
# byte_2C770 = (byte_2C770 & 0x25) + (~byte_2C770 & 0xDA);
# byte_2C771 = (~byte_2C771 & 0xDA) + (byte_2C771 & 0x25);
# byte_2C773 = (~byte_2C773 & 0xDA) + (byte_2C773 & 0x25);
# byte_2C774 = (byte_2C774 & 0x25) + (~byte_2C774 & 0xDA);
# byte_2C776 = (byte_2C776 & 0x25) + (~byte_2C776 & 0xDA);
# byte_2C777 = (byte_2C777 & 0x25) + (~byte_2C777 & 0xDA);
# byte_2C778 = (byte_2C778 & 0x25) + (~byte_2C778 & 0xDA);
# byte_2C772 = ((byte_2C772 & 0x17) + (~byte_2C772 & 0xE8)) ^ 0x32;
# byte_2C775 = ((byte_2C775 & 0xA4) + (~byte_2C775 & 0x5B)) ^ 0x81;
# byte_2C779 = ((byte_2C779 & 0xDD) + (~byte_2C779 & 0x22)) ^ 0xF8;
# byte_2C77A = ((byte_2C77A & 0x18) + (~byte_2C77A & 0xE7)) ^ 0x3D;
# byte_2C77B = (byte_2C77B & 0x25) + (~byte_2C77B & 0xDA);
# byte_2C77C = (byte_2C77C & 0x25) + (~byte_2C77C & 0xDA);
# byte_2C77D = (byte_2C77D & 0x25) + (~byte_2C77D & 0xDA);
# byte_2C77E = ((byte_2C77E & 0x78) + (~byte_2C77E & 0x87)) ^ 0x5D;
# byte_2C77F = ((byte_2C77F & 0x20) + (~byte_2C77F & 0xDF)) ^ 5;
# byte_2C780 = (byte_2C780 & 0x25) + (~byte_2C780 & 0xDA);
# byte_2C781 = (byte_2C781 & 0x25) + (~byte_2C781 & 0xDA);
# byte_2C782 = (byte_2C782 & 0x25) + (~byte_2C782 & 0xDA);
# byte_2C783 = ((byte_2C783 & 7) + (~byte_2C783 & 0xF8)) ^ 0x22;
# byte_2C784 = ((byte_2C784 & 0xCB) + (~byte_2C784 & 0x34)) ^ 0xEE;
# byte_2C785 = ((byte_2C785 & 0xFA) + (~byte_2C785 & 5)) ^ 0xDF;
# byte_2C786 = (byte_2C786 & 0x25) + (~byte_2C786 & 0xDA);
# byte_2C787 = ((byte_2C787 & 0x11) + (~byte_2C787 & 0xEE)) ^ 0x34;
# byte_2C788 = (byte_2C788 & 0x25) + (~byte_2C788 & 0xDA);
# byte_2C789 = ((byte_2C789 & 0x2F) + (~byte_2C789 & 0xD0)) ^ 0x81;
# byte_2C78A = ((~byte_2C78A & 0x88) + (byte_2C78A & 0x77)) ^ 0xD9;
# byte_2C790 = (byte_2C790 & 0x83) + (~byte_2C790 & 0x7C);
# byte_2C793 = (byte_2C793 & 0x83) + (~byte_2C793 & 0x7C);
# byte_2C791 = ((~byte_2C791 & 0x40) + (byte_2C791 & 0xBF)) ^ 0x3C;
# byte_2C792 = ((~byte_2C792 & 0xAC) + (byte_2C792 & 0x53)) ^ 0xD0;
# byte_2C794 = ((byte_2C794 & 0xFC) + (~byte_2C794 & 3)) ^ 0x7F;
# byte_2C795 = ((byte_2C795 & 0x1F) + (~byte_2C795 & 0xE0)) ^ 0x9C;
# byte_2C796 = ((byte_2C796 & 0xC3) + (~byte_2C796 & 0x3C)) ^ 0x40;
# byte_2C797 = ((byte_2C797 & 0xCA) + (~byte_2C797 & 0x35)) ^ 0x49;
# byte_2C798 = ((byte_2C798 & 0xD7) + (~byte_2C798 & 0x28)) ^ 0x54;
# byte_2C799 = (byte_2C799 & 0x83) + (~byte_2C799 & 0x7C);
# byte_2C79A = ((byte_2C79A & 0x74) + (~byte_2C79A & 0x8B)) ^ 0xF7;
# byte_2C79B = ((byte_2C79B & 0x11) + (~byte_2C79B & 0xEE)) ^ 0x92;
# byte_2C79C = (byte_2C79C & 0x83) + (~byte_2C79C & 0x7C);
# byte_2C79D = (byte_2C79D & 0x83) + (~byte_2C79D & 0x7C);
# byte_2C79E = (byte_2C79E & 0x83) + (~byte_2C79E & 0x7C);
# byte_2C79F = ((byte_2C79F & 0xA1) + (~byte_2C79F & 0x5E)) ^ 0x22;
# byte_2C7A0 = ((byte_2C7A0 & 0xB5) + (~byte_2C7A0 & 0x4A)) ^ 0x36;
# byte_2C7A1 = ((byte_2C7A1 & 0xB6) + (~byte_2C7A1 & 0x49)) ^ 0x35;
# byte_2C7A2 = (byte_2C7A2 & 0x83) + (~byte_2C7A2 & 0x7C);
# byte_2C7A3 = (byte_2C7A3 & 0x83) + (~byte_2C7A3 & 0x7C);
# byte_2C7A4 = ((byte_2C7A4 & 0x58) + (~byte_2C7A4 & 0xA7)) ^ 0xDB;
# byte_2C7B1 = (byte_2C7B1 & 0x24) + (~byte_2C7B1 & 0xDB);
# byte_2C7B2 = (~byte_2C7B2 & 0xDB) + (byte_2C7B2 & 0x24);
# byte_2C7B5 = (byte_2C7B5 & 0x24) + (~byte_2C7B5 & 0xDB);
# byte_2C7B6 = (byte_2C7B6 & 0x24) + (~byte_2C7B6 & 0xDB);
# byte_2C7B8 = (byte_2C7B8 & 0x24) + (~byte_2C7B8 & 0xDB);
# byte_2C7B0 = ((~byte_2C7B0 & 0xE4) + (byte_2C7B0 & 0x1B)) ^ 0x3F;
# byte_2C7B3 = ((~byte_2C7B3 & 0x52) + (byte_2C7B3 & 0xAD)) ^ 0x89;
# byte_2C7B4 = ((byte_2C7B4 & 2) + (~byte_2C7B4 & 0xFD)) ^ 0x26;
# byte_2C7B7 = ((byte_2C7B7 & 0xF1) + (~byte_2C7B7 & 0xE)) ^ 0xD5;
# byte_2C7B9 = ((byte_2C7B9 & 0x42) + (~byte_2C7B9 & 0xBD)) ^ 0x66;
# byte_2C7BA = (byte_2C7BA & 0x24) + (~byte_2C7BA & 0xDB);
# byte_2C7BB = ((byte_2C7BB & 0xA0) + (~byte_2C7BB & 0x5F)) ^ 0x84;
# byte_2C7BC = ((byte_2C7BC & 0x91) + (~byte_2C7BC & 0x6E)) ^ 0xB5;
# byte_2C7BD = ((byte_2C7BD & 0x48) + (~byte_2C7BD & 0xB7)) ^ 0x6C;
# byte_2C7BE = (byte_2C7BE & 0x24) + (~byte_2C7BE & 0xDB);
# byte_2C7BF = ((byte_2C7BF & 0x3A) + (~byte_2C7BF & 0xC5)) ^ 0x1E;
# byte_2C7C0 = ((~byte_2C7C0 & 0x3A) + (byte_2C7C0 & 0xC5)) ^ 0xE1;
# byte_2C7C1 = ((byte_2C7C1 & 0x5C) + (~byte_2C7C1 & 0xA3)) ^ 0x78;
# byte_2C7C2 = ((byte_2C7C2 & 0xB2) + (~byte_2C7C2 & 0x4D)) ^ 0x96;
# byte_2C7C3 = (~byte_2C7C3 & 0xDB) + (byte_2C7C3 & 0x24);
# byte_2C7C4 = ((byte_2C7C4 & 0xA1) + (~byte_2C7C4 & 0x5E)) ^ 0x85;
# byte_2C7C6 = (byte_2C7C6 & 0xC0) + (~byte_2C7C6 & 0x3F);
# byte_2C7C8 = (~byte_2C7C8 & 0x3F) + (byte_2C7C8 & 0xC0);
# byte_2C7C5 = ((byte_2C7C5 & 7) + (~byte_2C7C5 & 0xF8)) ^ 0xC7;
# byte_2C7C7 = ((~byte_2C7C7 & 0x48) + (byte_2C7C7 & 0xB7)) ^ 0x77;
# byte_2C7C9 = ((byte_2C7C9 & 0xFA) + (~byte_2C7C9 & 5)) ^ 0x3A;
# byte_2C7CA = (byte_2C7CA & 0x1C) + (~byte_2C7CA & 0xE3);
# byte_2C7CC = (~byte_2C7CC & 0xE3) + (byte_2C7CC & 0x1C);
# byte_2C7D0 = (byte_2C7D0 & 0x1C) + (~byte_2C7D0 & 0xE3);
# byte_2C7D1 = (byte_2C7D1 & 0x1C) + (~byte_2C7D1 & 0xE3);
# byte_2C7CB = ((~byte_2C7CB & 0x40) + (byte_2C7CB & 0xBF)) ^ 0xA3;
# byte_2C7CD = ((~byte_2C7CD & 0x54) + (byte_2C7CD & 0xAB)) ^ 0xB7;
# byte_2C7CE = ((byte_2C7CE & 0x7B) + (~byte_2C7CE & 0x84)) ^ 0x67;
# byte_2C7CF = ((byte_2C7CF & 0x42) + (~byte_2C7CF & 0xBD)) ^ 0x5E;
# byte_2C7D4 = (byte_2C7D4 & 0xB9) + (~byte_2C7D4 & 0x46);
# byte_2C7D2 = ((byte_2C7D2 & 0x59) + (~byte_2C7D2 & 0xA6)) ^ 0xE0;
# byte_2C7D3 = ((~byte_2C7D3 & 0x1C) + (byte_2C7D3 & 0xE3)) ^ 0x5A;
# byte_2C7D6 = (byte_2C7D6 & 0x78) + (~byte_2C7D6 & 0x87);
# byte_2C7D7 = (~byte_2C7D7 & 0x87) + (byte_2C7D7 & 0x78);
# byte_2C7D5 = ((byte_2C7D5 & 0x34) + (~byte_2C7D5 & 0xCB)) ^ 0x4C;
# byte_2C7D8 = (byte_2C7D8 & 0x5D) + (~byte_2C7D8 & 0xA2);
# byte_2C7D9 = (~byte_2C7D9 & 0xA2) + (byte_2C7D9 & 0x5D);
# byte_2C7DD = (byte_2C7DD & 0xDE) + (~byte_2C7DD & 0x21);
# byte_2C7E0 = (byte_2C7E0 & 0xDE) + (~byte_2C7E0 & 0x21);
# byte_2C7E1 = (byte_2C7E1 & 0xDE) + (~byte_2C7E1 & 0x21);
# byte_2C7DA = ((byte_2C7DA & 0xB4) + (~byte_2C7DA & 0x4B)) ^ 0x6A;
# byte_2C7DB = ((~byte_2C7DB & 0x55) + (byte_2C7DB & 0xAA)) ^ 0x74;
# byte_2C7DC = ((byte_2C7DC & 0x3F) + (~byte_2C7DC & 0xC0)) ^ 0xE1;
# byte_2C7DE = ((byte_2C7DE & 0xE2) + (~byte_2C7DE & 0x1D)) ^ 0x3C;
# byte_2C7DF = ((byte_2C7DF & 0x3C) + (~byte_2C7DF & 0xC3)) ^ 0xE2;
# byte_2C7E2 = ((byte_2C7E2 & 0x76) + (~byte_2C7E2 & 0x89)) ^ 0xA8;
# byte_2C7E3 = ((byte_2C7E3 & 0xF8) + (~byte_2C7E3 & 7)) ^ 0x26;
# byte_2C7E4 = (byte_2C7E4 & 0xDE) + (~byte_2C7E4 & 0x21);
# byte_2C7E5 = ((byte_2C7E5 & 0xF8) + (~byte_2C7E5 & 7)) ^ 0x26;
# byte_2C7E6 = (byte_2C7E6 & 0xDE) + (~byte_2C7E6 & 0x21);
# byte_2C7E7 = ((byte_2C7E7 & 0xC5) + (~byte_2C7E7 & 0x3A)) ^ 0x1B;
# byte_2C7E8 = ((byte_2C7E8 & 0xCD) + (~byte_2C7E8 & 0x32)) ^ 0x13;
# byte_2C7E9 = (~byte_2C7E9 & 0x9B) + (byte_2C7E9 & 0x64);
# byte_2C7ED = (byte_2C7ED & 0x64) + (~byte_2C7ED & 0x9B);
# byte_2C7EE = (byte_2C7EE & 0x64) + (~byte_2C7EE & 0x9B);
# byte_2C7EF = (byte_2C7EF & 0x64) + (~byte_2C7EF & 0x9B);
# byte_2C7F1 = (byte_2C7F1 & 0x64) + (~byte_2C7F1 & 0x9B);
# byte_2C7EA = ((byte_2C7EA & 0xE8) + (~byte_2C7EA & 0x17)) ^ 0x8C;
# byte_2C7EB = ((~byte_2C7EB & 0x7B) + (byte_2C7EB & 0x84)) ^ 0xE0;
# byte_2C7EC = ((~byte_2C7EC & 0x74) + (byte_2C7EC & 0x8B)) ^ 0xEF;
# byte_2C7F0 = ((byte_2C7F0 & 0xE6) + (~byte_2C7F0 & 0x19)) ^ 0x82;
# byte_2C7F2 = (byte_2C7F2 & 0x64) + (~byte_2C7F2 & 0x9B);
# byte_2C7F3 = ((byte_2C7F3 & 0xC) + (~byte_2C7F3 & 0xF3)) ^ 0x68;
# byte_2C7F4 = ((byte_2C7F4 & 6) + (~byte_2C7F4 & 0xF9)) ^ 0x62;
# byte_2C7F5 = (byte_2C7F5 & 0x3B) + (~byte_2C7F5 & 0xC4);
# byte_2C7F6 = (~byte_2C7F6 & 0xC4) + (byte_2C7F6 & 0x3B);
# byte_2C7F7 = (~byte_2C7F7 & 0xC4) + (byte_2C7F7 & 0x3B);
# byte_2C7F8 = ((~byte_2C7F8 & 0xE4) + (byte_2C7F8 & 0x1B)) ^ 0x20;
# byte_2C7F9 = (byte_2C7F9 & 0x56) + (~byte_2C7F9 & 0xA9);
# byte_2C7FA = ((~byte_2C7FA & 0x2B) + (byte_2C7FA & 0xD4)) ^ 0x82;
# byte_2C7FB = ((byte_2C7FB & 0xD3) + (~byte_2C7FB & 0x2C)) ^ 0xD9;
# byte_2C7FC = ((~byte_2C7FC & 0x58) + (byte_2C7FC & 0xA7)) ^ 0xAD;
# byte_2C801 = (byte_2C801 & 0xEC) + (~byte_2C801 & 0x13);
# byte_2C803 = (~byte_2C803 & 0x13) + (byte_2C803 & 0xEC);
# byte_2C804 = (byte_2C804 & 0xEC) + (~byte_2C804 & 0x13);
# byte_2C805 = (byte_2C805 & 0xEC) + (~byte_2C805 & 0x13);
# byte_2C806 = (byte_2C806 & 0xEC) + (~byte_2C806 & 0x13);
# byte_2C807 = (byte_2C807 & 0xEC) + (~byte_2C807 & 0x13);
# byte_2C800 = ((byte_2C800 & 0x11) + (~byte_2C800 & 0xEE)) ^ 0xFD;
# byte_2C802 = ((~byte_2C802 & 0x36) + (byte_2C802 & 0xC9)) ^ 0x25;
# byte_2C808 = ((byte_2C808 & 0xE1) + (~byte_2C808 & 0x1E)) ^ 0xD;
# byte_2C809 = (byte_2C809 & 0xEC) + (~byte_2C809 & 0x13);
# byte_2C80A = ((byte_2C80A & 0x2E) + (~byte_2C80A & 0xD1)) ^ 0xC2;
# byte_2C80B = (byte_2C80B & 0xEC) + (~byte_2C80B & 0x13);
# byte_2C80C = (byte_2C80C & 0xEC) + (~byte_2C80C & 0x13);
# byte_2C80D = (byte_2C80D & 0xEC) + (~byte_2C80D & 0x13);
# byte_2C80E = (byte_2C80E & 0xEC) + (~byte_2C80E & 0x13);
# byte_2C80F = (byte_2C80F & 0xEC) + (~byte_2C80F & 0x13);
# byte_2C810 = (byte_2C810 & 0xEC) + (~byte_2C810 & 0x13);
# byte_2C811 = (byte_2C811 & 0xEC) + (~byte_2C811 & 0x13);
# byte_2C812 = (byte_2C812 & 0xEC) + (~byte_2C812 & 0x13);
# byte_2C813 = (byte_2C813 & 1) + (~byte_2C813 & 0xFE);
# byte_2C814 = ((~byte_2C814 & 0x2B) + (byte_2C814 & 0xD4)) ^ 0xD5;
# byte_2C821 = (byte_2C821 & 0x55) + (~byte_2C821 & 0xAA);
# byte_2C824 = (byte_2C824 & 0x55) + (~byte_2C824 & 0xAA);
# byte_2C826 = (byte_2C826 & 0x55) + (~byte_2C826 & 0xAA);
# byte_2C828 = (byte_2C828 & 0x55) + (~byte_2C828 & 0xAA);
# byte_2C820 = ((byte_2C820 & 0xCD) + (~byte_2C820 & 0x32)) ^ 0x98;
# byte_2C822 = ((byte_2C822 & 0x51) + (~byte_2C822 & 0xAE)) ^ 4;
# byte_2C823 = ((byte_2C823 & 0x76) + (~byte_2C823 & 0x89)) ^ 0x23;
# byte_2C825 = ((~byte_2C825 & 0x6A) + (byte_2C825 & 0x95)) ^ 0xC0;
# byte_2C827 = ((~byte_2C827 & 0x47) + (byte_2C827 & 0xB8)) ^ 0xED;
# byte_2C829 = ((~byte_2C829 & 0x4E) + (byte_2C829 & 0xB1)) ^ 0xE4;
# byte_2C82A = (byte_2C82A & 0x55) + (~byte_2C82A & 0xAA);
# byte_2C82B = ((byte_2C82B & 0xD7) + (~byte_2C82B & 0x28)) ^ 0x82;
# byte_2C82C = (byte_2C82C & 0x55) + (~byte_2C82C & 0xAA);
# byte_2C82D = ((byte_2C82D & 0xF4) + (~byte_2C82D & 0xB)) ^ 0xA1;
# byte_2C82E = ((byte_2C82E & 0xCE) + (~byte_2C82E & 0x31)) ^ 0x9B;
# byte_2C82F = ((byte_2C82F & 0xB4) + (~byte_2C82F & 0x4B)) ^ 0xE1;
# byte_2C830 = ((byte_2C830 & 0x25) + (~byte_2C830 & 0xDA)) ^ 0x70;
# byte_2C831 = (byte_2C831 & 0x55) + (~byte_2C831 & 0xAA);
# byte_2C832 = (byte_2C832 & 0x55) + (~byte_2C832 & 0xAA);
# result = 0;
# do
# {
#     byte_2C840[result] = ((byte_2C840[result] & 0x25) + (~byte_2C840[result] & 0xDA)) ^ 0x28;
# ++result;
# }
# while (result != 55);
# return result;
